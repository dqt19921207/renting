<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rent.manager.mapper.BuildingMapper">
  <resultMap id="BaseResultMap" type="com.rent.manager.model.Building">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="addr" jdbcType="VARCHAR" property="addr" />
    <result column="number" jdbcType="VARCHAR" property="number" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="watet_fee" jdbcType="DECIMAL" property="watetFee" />
    <result column="elc_fee" jdbcType="DECIMAL" property="elcFee" />
    <result column="del" jdbcType="INTEGER" property="del" />
  </resultMap>
  <sql id="Base_Column_List">
    id, name, addr, number, user_id, watet_fee, elc_fee, del
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from building
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from building
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.rent.manager.model.Building">
    insert into building (id, name, addr, 
      number, user_id, watet_fee, 
      elc_fee, del)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{addr,jdbcType=VARCHAR}, 
      #{number,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}, #{watetFee,jdbcType=DECIMAL}, 
      #{elcFee,jdbcType=DECIMAL}, #{del,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.rent.manager.model.Building">
    insert into building
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="addr != null">
        addr,
      </if>
      <if test="number != null">
        number,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="watetFee != null">
        watet_fee,
      </if>
      <if test="elcFee != null">
        elc_fee,
      </if>
      <if test="del != null">
        del,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="addr != null">
        #{addr,jdbcType=VARCHAR},
      </if>
      <if test="number != null">
        #{number,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="watetFee != null">
        #{watetFee,jdbcType=DECIMAL},
      </if>
      <if test="elcFee != null">
        #{elcFee,jdbcType=DECIMAL},
      </if>
      <if test="del != null">
        #{del,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.rent.manager.model.Building">
    update building
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="addr != null">
        addr = #{addr,jdbcType=VARCHAR},
      </if>
      <if test="number != null">
        number = #{number,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="watetFee != null">
        watet_fee = #{watetFee,jdbcType=DECIMAL},
      </if>
      <if test="elcFee != null">
        elc_fee = #{elcFee,jdbcType=DECIMAL},
      </if>
      <if test="del != null">
        del = #{del,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.rent.manager.model.Building">
    update building
    set name = #{name,jdbcType=VARCHAR},
      addr = #{addr,jdbcType=VARCHAR},
      number = #{number,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      watet_fee = #{watetFee,jdbcType=DECIMAL},
      elc_fee = #{elcFee,jdbcType=DECIMAL},
      del = #{del,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>