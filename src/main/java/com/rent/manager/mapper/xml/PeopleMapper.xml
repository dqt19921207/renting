<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rent.manager.mapper.PeopleMapper">
  <resultMap id="BaseResultMap" type="com.rent.manager.model.People">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="idcard" jdbcType="VARCHAR" property="idcard" />
    <result column="tel" jdbcType="VARCHAR" property="tel" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="rooms" jdbcType="INTEGER" property="rooms" />
    <result column="del" jdbcType="INTEGER" property="del" />
    <result column="out_time" jdbcType="TIMESTAMP" property="outTime" />
    <result column="in_time" jdbcType="TIMESTAMP" property="inTime" />
    <result column="num" jdbcType="VARCHAR" property="num" />
    <result column="in_elec" jdbcType="DECIMAL" property="inElec" />
    <result column="in_water" jdbcType="DECIMAL" property="inWater" />
    <result column="out_elec" jdbcType="DECIMAL" property="outElec" />
    <result column="out_water" jdbcType="DECIMAL" property="outWater" />
    <result column="fee" jdbcType="DECIMAL" property="fee" />
    <result column="pay_fee" jdbcType="DECIMAL" property="payFee" />
  </resultMap>
  <sql id="Base_Column_List">
    id,name, addr, idcard, tel, sex, rooms, del, out_time, in_time,num,in_elec,in_water,out_elec,out_water,fee,pay_fee
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from people
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectHistoryFee" parameterType="com.rent.manager.model.People" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from people
    where num=#{num}
    and rooms=#{rooms}
    and out_time is not null
    order by out_time desc
    limit 1
  </select>
  <select id="getNumList" parameterType="com.rent.manager.model.People" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from people
    where num=#{num}
    and rooms=#{rooms}
    and out_time is not null
    group by num
    order by out_time desc
  </select>
  <select id="selectRommsPeople" parameterType="java.lang.Integer" resultType="java.lang.Integer">
    select
    count(*)
    from people
    where rooms = #{rooms,jdbcType=INTEGER}
    and out_time is  null
  </select>

  <update id="peopleOut" parameterType="com.rent.manager.model.People" >
    update people
    set pay_fee=#{payFee} ,
        out_time=now(),
        out_water=#{outWater},
        out_elec=#{outElec}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="getList" parameterType="com.rent.manager.model.People" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from people
    where rooms=#{rooms}
      and out_time is null
  </select>

  <select id="getHistoryList" parameterType="com.rent.manager.model.People" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from people
    where rooms=#{rooms}
    and out_time is not null
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from people
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.rent.manager.model.People">
    insert into people (id, name, addr, 
      idcard, tel, sex, rooms, 
      del, out_time, in_time
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{addr,jdbcType=VARCHAR}, 
      #{idcard,jdbcType=VARCHAR}, #{tel,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, #{rooms,jdbcType=INTEGER}, 
      0, #{outTime,jdbcType=TIMESTAMP}, #{inTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.rent.manager.model.People">
    insert into people
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="addr != null">
        addr,
      </if>
      <if test="idcard != null">
        idcard,
      </if>
      <if test="tel != null">
        tel,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="rooms != null">
        rooms,
      </if>
      <if test="outTime != null">
        out_time,
      </if>
      <if test="num != null">
        num,
      </if>
      <if test="inElec != null">
        in_elec,
      </if>
      <if test="inWater != null">
        in_water,
      </if>
      <if test="outElec != null">
        out_elec,
      </if>
      <if test="outWater != null">
        out_water,
      </if>
      <if test="fee != null">
        fee,
      </if>
      <if test="payFee != null">
        pay_fee,
      </if>
      in_time
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="addr != null">
        #{addr,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null">
        #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="tel != null">
        #{tel,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="rooms != null">
        #{rooms,jdbcType=INTEGER},
      </if>
      <if test="outTime != null">
        #{outTime,jdbcType=TIMESTAMP},
      </if>
      <if test="num != null">
        #{num,jdbcType=VARCHAR},
      </if>
      <if test="inElec != null">
        #{inElec,jdbcType=DECIMAL},
      </if>
      <if test="inWater != null">
        #{inWater,jdbcType=DECIMAL},
      </if>
      <if test="outElec != null">
        #{outElec,jdbcType=DECIMAL},
      </if>
      <if test="outWater != null">
        #{outWater,jdbcType=DECIMAL},
      </if>
      <if test="fee != null">
        #{fee,jdbcType=DECIMAL},
      </if>
      <if test="payFee != null">
        #{payFee,jdbcType=DECIMAL},
      </if>
      now()
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.rent.manager.model.People">
    update people
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="addr != null">
        addr = #{addr,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null">
        idcard = #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="tel != null">
        tel = #{tel,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="rooms != null">
        rooms = #{rooms,jdbcType=INTEGER},
      </if>
      <if test="del != null">
        del = #{del,jdbcType=INTEGER},
      </if>
      <if test="outTime != null">
        out_time = #{outTime,jdbcType=TIMESTAMP},
      </if>
      <if test="inTime != null">
        in_time = #{inTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.rent.manager.model.People">
    update people
    set name = #{name,jdbcType=VARCHAR},
      addr = #{addr,jdbcType=VARCHAR},
      idcard = #{idcard,jdbcType=VARCHAR},
      tel = #{tel,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      rooms = #{rooms,jdbcType=INTEGER},
      del = #{del,jdbcType=INTEGER},
      out_time = #{outTime,jdbcType=TIMESTAMP},
      in_time = #{inTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>