<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rent.rent.dao.mapper.RoomsMapper">
  <resultMap id="BaseResultMap" type="com.rent.rent.model.Rooms">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="rooms" jdbcType="VARCHAR" property="rooms" />
    <result column="fee" jdbcType="DECIMAL" property="fee" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="del" jdbcType="INTEGER" property="del" />
    <result column="water" jdbcType="DECIMAL" property="water" />
    <result column="elect" jdbcType="DECIMAL" property="elect" />
    <result column="build_id" jdbcType="INTEGER" property="buildId" />
  </resultMap>
  <sql id="Base_Column_List">
    id, rooms, fee, type, del, water, elect, build_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from rooms
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from rooms
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.rent.rent.model.Rooms">
    insert into rooms (id, rooms, fee, 
      type, del, water, elect, 
      build_id)
    values (#{id,jdbcType=INTEGER}, #{rooms,jdbcType=VARCHAR}, #{fee,jdbcType=DECIMAL}, 
      #{type,jdbcType=INTEGER}, #{del,jdbcType=INTEGER}, #{water,jdbcType=DECIMAL}, #{elect,jdbcType=DECIMAL}, 
      #{buildId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.rent.rent.model.Rooms">
    insert into rooms
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="rooms != null">
        rooms,
      </if>
      <if test="fee != null">
        fee,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="del != null">
        del,
      </if>
      <if test="water != null">
        water,
      </if>
      <if test="elect != null">
        elect,
      </if>
      <if test="buildId != null">
        build_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="rooms != null">
        #{rooms,jdbcType=VARCHAR},
      </if>
      <if test="fee != null">
        #{fee,jdbcType=DECIMAL},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="del != null">
        #{del,jdbcType=INTEGER},
      </if>
      <if test="water != null">
        #{water,jdbcType=DECIMAL},
      </if>
      <if test="elect != null">
        #{elect,jdbcType=DECIMAL},
      </if>
      <if test="buildId != null">
        #{buildId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.rent.rent.model.Rooms">
    update rooms
    <set>
      <if test="rooms != null">
        rooms = #{rooms,jdbcType=VARCHAR},
      </if>
      <if test="fee != null">
        fee = #{fee,jdbcType=DECIMAL},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="del != null">
        del = #{del,jdbcType=INTEGER},
      </if>
      <if test="water != null">
        water = #{water,jdbcType=DECIMAL},
      </if>
      <if test="elect != null">
        elect = #{elect,jdbcType=DECIMAL},
      </if>
      <if test="buildId != null">
        build_id = #{buildId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.rent.rent.model.Rooms">
    update rooms
    set rooms = #{rooms,jdbcType=VARCHAR},
      fee = #{fee,jdbcType=DECIMAL},
      type = #{type,jdbcType=INTEGER},
      del = #{del,jdbcType=INTEGER},
      water = #{water,jdbcType=DECIMAL},
      elect = #{elect,jdbcType=DECIMAL},
      build_id = #{buildId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>